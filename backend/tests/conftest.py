import pytest

from src.entities import SeaEvent


@pytest.fixture
def dataset_sea_events_as_dict() -> dict[str, list[dict]]:
    return {
        "sea-events-1": [
            {
                "uuid": "acf2178e-6502-4c4f-8117-39a8315be94b",
                "shipName": "ship-name-1",
                "eventType": "event-type-1",
                "occurrenceDate": "2020-01-01",
                "occurrenceTime": "00:00:00",
                "occurrenceNationalId": "occurrence-national-id-1",
                "notificationDate": "2020-01-01",
                "notificationTime": "00:00:00",
                "notificationEntity": "notification-entity-1",
                "directive_2009_18": "directive-2009-18-1",
                "coastalState": "coastal-state-1",
                "lattitude": "lattitude-1",
                "longitude": "longitude-1",
                "callSign": "call-sign-1",
                "flagState": "flag-state-1",
                "grossTonnage": "gross-tonnage-1",
                "builtYear": "built-year-1",
                "hullMaterial": "hull-material-1",
                "propulsionType": "propulsion-type-1",
                "nationalLocation": "national-location-1",
                "registryNumber": "registry-number-1",
                "IMO": "imo-1",
                "occurrenceSeaArea": "occurrence-sea-area-1",
                "shipType": "shipType-1",
                "overallLength": "overall-length-1",
                "nbLivesLost": "lives-lost-1",
                "nbInjuredPeople": "injured-people-1",
                "nbMissingPeople": "missing-people-1",
                "processingStatus": "to-process",
            },
            {
                "uuid": "acf2178e-6502-4c4f-8117-39a8315be94c",
                "shipName": "ship-name-2",
                "eventType": "event-type-2",
                "occurrenceDate": "2020-01-02",
                "occurrenceTime": "00:00:00",
                "occurrenceNationalId": "occurrence-national-id-2",
                "notificationDate": "2020-01-02",
                "notificationTime": "00:00:00",
                "notificationEntity": "notification-entity-2",
                "directive_2009_18": "directive-2009-18-2",
                "coastalState": "coastal-state-2",
                "lattitude": "lattitude-2",
                "longitude": "longitude-2",
                "callSign": "call-sign-2",
                "flagState": "flag-state-2",
                "grossTonnage": "gross-tonnage-2",
                "builtYear": "built-year-2",
                "hullMaterial": "hull-material-2",
                "propulsionType": "propulsion-type-2",
                "nationalLocation": "national-location-2",
                "registryNumber": "registry-number-2",
                "IMO": "imo-2",
                "occurrenceSeaArea": "occurrence-sea-area-2",
                "shipType": "shipType-2",
                "overallLength": "overall-length-2",
                "nbLivesLost": "lives-lost-2",
                "nbInjuredPeople": "injured-people-2",
                "nbMissingPeople": "missing-people-2",
                "processingStatus": "to-process",
            },
        ],
        "sea-events-2": [
            {
                "uuid": "acf2178e-6502-4c4f-8117-39a8315be943",
                "shipName": "ship-name-3",
                "eventType": "event-type-3",
                "occurrenceDate": "2020-01-03",
                "occurrenceTime": "00:00:03",
                "occurrenceNationalId": "occurrence-national-id-3",
                "notificationDate": "2020-01-03",
                "notificationTime": "00:00:03",
                "notificationEntity": "notification-entity-3",
                "directive_2009_18": "directive-2009-18-3",
                "coastalState": "coastal-state-3",
                "lattitude": "lattitude-3",
                "longitude": "longitude-3",
                "callSign": "call-sign-3",
                "flagState": "flag-state-3",
                "grossTonnage": "gross-tonnage-3",
                "builtYear": "built-year-3",
                "hullMaterial": "hull-material-3",
                "propulsionType": "propulsion-type-3",
                "nationalLocation": "national-location-3",
                "registryNumber": "registry-number-3",
                "IMO": "imo-3",
                "occurrenceSeaArea": "occurrence-sea-area-3",
                "shipType": "shipType-3",
                "overallLength": "overall-length-3",
                "nbLivesLost": "lives-lost-3",
                "nbInjuredPeople": "injured-people-3",
                "nbMissingPeople": "missing-people-3",
                "processingStatus": "to-process",
            },
            {
                "uuid": "acf2178e-6502-4c4f-8117-39a8315be944",
                "shipName": "ship-name-4",
                "eventType": "event-type-4",
                "occurrenceDate": "2020-01-04",
                "occurrenceTime": "00:00:04",
                "occurrenceNationalId": "occurrence-national-id-4",
                "notificationDate": "2020-01-04",
                "notificationTime": "00:00:04",
                "notificationEntity": "notification-entity-4",
                "directive_2009_18": "directive-2009-18-4",
                "coastalState": "coastal-state-4",
                "lattitude": "lattitude-4",
                "longitude": "longitude-4",
                "callSign": "call-sign-4",
                "flagState": "flag-state-4",
                "grossTonnage": "gross-tonnage-4",
                "builtYear": "built-year-4",
                "hullMaterial": "hull-material-4",
                "propulsionType": "propulsion-type-4",
                "nationalLocation": "national-location-4",
                "registryNumber": "registry-number-4",
                "IMO": "imo-4",
                "occurrenceSeaArea": "occurrence-sea-area-4",
                "shipType": "shipType-4",
                "overallLength": "overall-length-4",
                "nbLivesLost": "lives-lost-4",
                "nbInjuredPeople": "injured-people-4",
                "nbMissingPeople": "missing-people-4",
                "processingStatus": "ignored",
            },
        ],
    }


@pytest.fixture
def dataset_sea_events(
    dataset_sea_events_as_dict: dict[str, list[dict]]
) -> dict[str, list[SeaEvent]]:
    dataset_sea_events_return = {}
    for dataset_name in dataset_sea_events_as_dict:
        dataset_sea_events_return[dataset_name] = [
            SeaEvent(
                uuid=sea_event_dict["uuid"],
                ship_name=sea_event_dict["shipName"],
                event_type=sea_event_dict["eventType"],
                occurrence_date=sea_event_dict["occurrenceDate"],
                occurrence_time=sea_event_dict["occurrenceTime"],
                occurrence_national_id=sea_event_dict["occurrenceNationalId"],
                notification_date=sea_event_dict["notificationDate"],
                notification_time=sea_event_dict["notificationTime"],
                notification_entity=sea_event_dict["notificationEntity"],
                directive_2009_18=sea_event_dict["directive_2009_18"],
                coastal_state=sea_event_dict["coastalState"],
                lattitude=sea_event_dict["lattitude"],
                longitude=sea_event_dict["longitude"],
                call_sign=sea_event_dict["callSign"],
                flag_state=sea_event_dict["flagState"],
                gross_tonnage=sea_event_dict["grossTonnage"],
                built_year=sea_event_dict["builtYear"],
                hull_material=sea_event_dict["hullMaterial"],
                propulsion_type=sea_event_dict["propulsionType"],
                national_location=sea_event_dict["nationalLocation"],
                registry_number=sea_event_dict["registryNumber"],
                imo=sea_event_dict["IMO"],
                occurrence_sea_area=sea_event_dict["occurrenceSeaArea"],
                ship_type=sea_event_dict["shipType"],
                overall_length=sea_event_dict["overallLength"],
                nb_lives_lost=sea_event_dict["nbLivesLost"],
                nb_injured_people=sea_event_dict["nbInjuredPeople"],
                nb_missing_people=sea_event_dict["nbMissingPeople"],
                processing_status=sea_event_dict["processingStatus"],
            )
            for sea_event_dict in dataset_sea_events_as_dict[dataset_name]
        ]
    return dataset_sea_events_return
